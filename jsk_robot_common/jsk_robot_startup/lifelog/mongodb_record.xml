<launch>
  <arg name="camera_ns" default="/kinect_head" />
  <arg name="input_cloud" default="$(arg camera_ns)/depth_registered/points" />
  <arg name="input_camera_info" default="$(arg camera_ns)/depth_registered/camera_info" />
  <arg name="base_frame_id" default="base_link" />
  <arg name="sensor_frame_id" default="head_mount_kinect_rgb_optical_frame"/>
  <arg name="machine" default="localhost" />
  <arg name="use_machine" default="true" />
  <arg name="respawn" default="false" />
  <arg name="vital_rate" default="0.1" />

  <machine if="$(arg use_machine)" name="localhost" address="localhost" />

  <group ns="lifelog">
    <node name="manager"
          pkg="jsk_topic_tools" type="standalone_complexed_nodelet"
          output="screen" respawn="$(arg respawn)"
          machine="$(arg machine)">
      <rosparam subst_value="true">
        nodelets:
        - name: input_relay
          type: jsk_topic_tools/LightweightThrottle
          remappings:
          - from: ~input
            to: $(arg input_cloud)
        - name: passthrough
          type: pcl/PassThrough
          remappings:
          - from: ~input
            to: input_relay/output
        - name: multi_plane_segmentation
          type: jsk_pcl/OrganizedMultiPlaneSegmentation
          remappings:
          - from: ~input
            to: passthrough/output
        - name: plane_reasoner
          type: jsk_pcl_utils/PlaneReasoner
          remappings:
          - from: ~input
            to: input_relay/output
          - from: ~input_inliers
            to: multi_plane_segmentation/output_refined
          - from: ~input_polygons
            to: multi_plane_segmentation/output_refined_polygon
          - from: ~input_coefficients
            to: multi_plane_segmentation/output_refined_coefficients
        - name: plane_reasoner_decomposer
          type: jsk_pcl/ClusterPointIndicesDecomposer
          remappings:
          - from: ~input
            to: input_relay/output
          - from: ~target
            to: plane_reasoner/output/horizontal/inliers
          - from: ~align_planes
            to: plane_reasoner/output/horizontal/polygons
          - from: ~align_planes_coefficients
            to: plane_reasoner/output/horizontal/coefficients
        - name: plane_concatenator
          type: jsk_pcl_utils/PlaneConcatenator
          remappings:
          - from: ~input
            to: input_relay/output
          - from: ~input/indices
            to: plane_reasoner/output/horizontal/inliers
          - from: ~input/polygons
            to: plane_reasoner/output/horizontal/polygons
          - from: ~input/coefficients
            to: plane_reasoner/output/horizontal/coefficients
        - name: polygon_magnifier
          type: jsk_pcl_utils/PolygonMagnifier
          remappings:
          - from: ~input
            to: plane_concatenator/output/polygons
        - name: plane_extraction
          type: jsk_pcl/MultiPlaneExtraction
          remappings:
          - from: ~input
            to: input_relay/output
          - from: ~indices
            to: plane_concatenator/output/indices
          - from: ~input_polygons
            to: polygon_magnifier/output
          - from: ~input_coefficients
            to: plane_concatenator/output/coefficients
        - name: euclidean_clustering
          type: jsk_pcl/EuclideanClustering
          remappings:
          - from: ~input
            to: plane_extraction/output
        - name: euclidean_clustering_decomposer
          type: jsk_pcl/ClusterPointIndicesDecomposer
          remappings:
          - from: ~input
            to: input_relay/output
          - from: ~target
            to: euclidean_clustering/output
          - from: ~align_planes
            to: polygon_magnifier/output
          - from: ~align_planes_coefficients
            to: plane_concatenator/output/coefficients
      </rosparam>
    </node>

    <rosparam subst_value="true"
              ns="input_relay">
      update_rate: 5.0
      vital_rate: $(arg vital_rate)
    </rosparam>

    <rosparam subst_value="true"
              ns="passthrough">
      filter_field_name: z
      filter_limit_min: 0.30
      filter_limit_max: 1.20
      filter_limit_negative: false
      keep_organized: true
      input_frame: $(arg base_frame_id)
    </rosparam>

    <rosparam subst_value="true"
              ns="multi_plane_segmentation">
      max_curvature: 0.01
      estimate_normal: true
      publish_normal: true
      vital_rate: $(arg vital_rate)
    </rosparam>

    <rosparam subst_value="true"
              ns="plane_reasoner">
      global_frame_id: $(arg base_frame_id)
      horizontal_angular_threshold: 0.2
      vertical_angular_threshold: 0.1
      vital_rate: $(arg vital_rate)
    </rosparam>

    <rosparam subst_value="true"
              ns="plane_reasoner_decomposer">
      queue_size: 100
      publish_clouds: false
      publish_tf: false
      align_boxes: true
      align_boxes_with_plane: true
      use_pca: true
      vital_rate: $(arg vital_rate)
    </rosparam>

    <rosparam subst_value="true"
              ns="plane_concatenator">
      connect_angular_threshold: 0.1
      connect_distance_threshold: 0.1
      min_size: 100
      min_area: 0.1
      max_area: 1.0
      vital_rate: $(arg vital_rate)
    </rosparam>

    <rosparam subst_value="true"
              ns="polygon_magnifier">
      use_scale_factor: true
      magnify_scale_factor: 0.9
      vital_rate: $(arg vital_rate)
    </rosparam>

    <rosparam subst_value="true"
              ns="plane_extraction">
      use_sensor_frame: true
      sensor_frame: $(arg sensor_frame_id)
      min_height: 0.01
      max_height: 0.10
      vital_rate: $(arg vital_rate)
    </rosparam>

    <rosparam subst_value="true"
              ns="euclidean_clustering">
      tolerance: 0.005
      min_size: 1
      max_size: 2000000
      vital_rate: $(arg vital_rate)
    </rosparam>

    <rosparam subst_value="true"
              ns="euclidean_clustering_decomposer">
      queue_size: 100
      publish_clouds: false
      publish_tf: false
      align_boxes: true
      align_boxes_with_plane: false
      target_frame_id: $(arg base_frame_id)
      use_pca: true
      vital_rate: $(arg vital_rate)
    </rosparam>
  </group>
</launch>
