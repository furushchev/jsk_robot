<launch>
  <!-- options -->
  <arg name="save_rgb" default="true" />
  <arg name="save_depth" default="true" />
  <arg name="save_tf" default="true" />
  <arg name="save_joint_states" default="true" />
  <arg name="save_speech" default="true" />
  <arg name="save_smach" default="true" />
  <arg name="save_base_trajectory" default="false" />
  <arg name="save_object_detection" default="false" />
  <arg name="save_action" default="false" />
  <arg name="save_app" default="true" />

  <!-- namespace -->
  <arg name="camera_ns" default="kinect_head" />
  <arg name="rgb_ns" default="rgb" />
  <arg name="depth_ns" default="depth_registered" />
  <arg name="camera_info_topic" default="camera_info" />
  <arg name="rgb_topic" default="image_rect_color" />
  <arg name="depth_topic" default="image_rect" />
  <arg name="joint_states_topic" default="joint_states" />

  <!-- frame -->
  <arg name="base_frame_id" default="base_link" />
  <arg name="map_frame_id" default="eng2" />
  <arg name="sensor_frame_id" default="head_mount_kinect_rgb_optical_frame"/>

  <!-- machine -->
  <arg name="localhost" default="true" />
  <arg unless="$(arg localhost)" name="machine"/>
  <arg     if="$(arg localhost)" name="machine" value="localhost" />
  <machine if="$(arg localhost)" name="localhost" address="localhost" />

  <!-- nodelet -->
  <arg name="launch_manager" default="true" />
  <arg     if="$(arg launch_manager)" name="manager" value="mongodb_record_nodelet_manager" />
  <arg unless="$(arg launch_manager)" name="manager" />

  <!-- others -->
  <arg name="enable_monitor" default="false" />
  <arg name="log_rate" default="1.0" />
  <arg name="respawn" default="false" />
  <arg name="vital_rate" default="0.1" />

  <!-- nodelet manager -->
  <node name="$(arg manager)" if="$(arg launch_manager)"
        pkg="nodelet" type="nodelet" args="manager" machine="$(arg machine)"
        output="screen" respawn="$(arg respawn)"/>

  <group ns="lifelog">
    <group if="$(arg save_rgb)">
      <!-- throttle -->
      <node name="throttle_rgb_camera_info"
            pkg="nodelet" type="nodelet"
            args="load jsk_topic_tools/LightweightThrottle /$(arg manager)"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="/$(arg camera_ns)/$(arg rgb_ns)/$(arg camera_info_topic)" />
        <remap from="~output" to="rgb/$(arg camera_info_topic)" />
        <param name="update_rate" value="$(arg log_rate)"/>
      </node>
      <node name="throttle_rgb"
            pkg="nodelet" type="nodelet"
            args="load jsk_topic_tools/LightweightThrottle /$(arg manager)"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="/$(arg camera_ns)/$(arg rgb_ns)/$(arg rgb_topic)/compressed"/>
        <remap from="~output" to="rgb/$(arg rgb_topic)/compressed" />
        <param name="update_rate" value="$(arg log_rate)" />
      </node>

      <!-- logger -->
      <node name="rgb_image_logger"
            pkg="nodelet" type="nodelet"
            args="load jsk_robot_lifelog/LightweightLogger /$(arg manager)"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="rgb/$(arg rgb_topic)/compressed" />
        <rosparam subst_value="true">
          enable_monitor: $(arg enable_monitor)
          monitor_topic: /$(arg camera_ns)/$(arg rgb_ns)/$(arg rgb_topic)
        </rosparam>
      </node>
      <node name="rgb_camera_info_logger"
            pkg="nodelet" type="nodelet"
            args="load jsk_robot_lifelog/LightweightLogger /$(arg manager)"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="rgb/$(arg camera_info_topic)" />
        <rosparam subst_value="true">
          enable_monitor: $(arg enable_monitor)
          monitor_topic: /$(arg camera_ns)/$(arg rgb_ns)/$(arg rgb_topic)
        </rosparam>
      </node>
    </group>

    <group if="$(arg save_depth)">
      <!-- throttle -->
      <node name="throttle_depth_camera_info"
            pkg="nodelet" type="nodelet"
            args="load jsk_topic_tools/LightweightThrottle /$(arg manager)"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="/$(arg camera_ns)/$(arg depth_ns)/$(arg camera_info_topic)" />
        <remap from="~output" to="depth/camera_info" />
        <param name="update_rate" value="$(arg log_rate)"/>
      </node>
      <node name="throttle_depth"
            pkg="nodelet" type="nodelet"
            args="load jsk_topic_tools/LightweightThrottle /$(arg manager)"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="/$(arg camera_ns)/$(arg depth_ns)/$(arg depth_topic)/compressedDepth"/>
        <remap from="~output" to="depth/$(arg depth_topic)/compressedDepth" />
        <param name="update_rate" value="$(arg log_rate)" />
      </node>

      <!-- logger -->
      <node name="depth_image_logger"
            pkg="nodelet" type="nodelet"
            args="load jsk_robot_lifelog/LightweightLogger /$(arg manager)"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="depth/$(arg depth_topic)/compressedDepth" />
        <rosparam subst_value="true">
          enable_monitor: $(arg enable_monitor)
          monitor_topic: /$(arg camera_ns)/$(arg depth_ns)/$(arg depth_topic)
        </rosparam>
      </node>
      <node name="depth_camera_info_logger"
            pkg="nodelet" type="nodelet"
            args="load jsk_robot_lifelog/LightweightLogger /$(arg manager)"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="depth/$(arg camera_info_topic)" />
        <rosparam subst_value="true">
          enable_monitor: $(arg enable_monitor)
          monitor_topic: /$(arg camera_ns)/$(arg depth_ns)/$(arg depth_topic)
        </rosparam>
      </node>
    </group>

    <!-- tf logger -->
    <node name="tf_logger"
          pkg="jsk_robot_startup" type="tf_logger.py"
          machine="$(arg machine)"
          respawn="$(arg respawn)"
          if="$(arg save_tf)">
      <rosparam subst_value="true">
        log_rate: $(arg log_rate)
      </rosparam>
    </node>

    <!-- joint states -->
    <group if="$(arg save_joint_states)">
      <node name="joint_states_throttle"
            pkg="jsk_robot_startup" type="joint_states_throttle"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="/$(arg joint_states_topic)" />
        <rosparam subst_value="true">
          periodic_rate: $(arg log_rate)
        </rosparam>
      </node>
      <node name="joint_states_logger"
            pkg="jsk_robot_startup" type="lightweight_logger"
            machine="$(arg machine)"
            respawn="$(arg respawn)">
        <remap from="~input" to="joint_states_throttle/output" />
        <rosparam subst_value="true">
          enable_monitor: $(arg enable_monitor)
          monitor_topic: /$(arg joint_states_topic)
        </rosparam>
      </node>
    </group>

    <node if="$(arg save_smach)"
          name="smach_logger"
          pkg="jsk_robot_startup" type="mongo_record.py"
          machine="$(arg machine)"
          respawn="$(arg respawn)">
      <rosparam subst_value="true">
        topics:
        - /server_name/smach/container_init
        - /server_name/smach/container_status
        - /server_name/smach/container_structure
      </rosparam>
    </node>

    <node if="$(arg save_speech)"
          name="speech_logger"
          pkg="jsk_robot_startup" type="mongo_record.py"
          machine="$(arg machine)"
          respawn="$(arg respawn)">
      <rosparam subst_value="true">
        topics:
        - /Tablet/voice
      </rosparam>
    </node>

    <!-- base trajecotry logger -->
    <node if="$(arg save_base_trajectory)"
          name="base_trajectory_logger"
          pkg="jsk_robot_startup" type="base_trajectory_logger.py"
          machine="$(arg machine)"
          respawn="$(arg respawn)">
      <param name="map_frame" value="$(arg map_frame_id)"/>
      <param name="robot_frame" value="$(arg base_frame_id)"/>
      <param name="update_cycle" value="$(arg log_rate)" />
    </node>

    <!-- object detection logger -->
    <node if="$(arg save_object_detection)"
          name="object_detection_logger"
          pkg="jsk_robot_startup" type="object_detection_logger.py"
          machine="$(arg machine)"
          respawn="$(arg respawn)">
      <param name="map_frame" value="$(arg map_frame_id)"/>
      <param name="robot_frame" value="$(arg base_frame_id)"/>
    </node>

    <!-- action logger -->
    <node if="$(arg save_action)"
          name="action_logger"
          pkg="jsk_robot_startup" type="action_logger.py"
          machine="$(arg machine)"
          respawn="$(arg respawn)" />

    <!-- app manager -->
    <node if="$(arg save_app)"
          name="app_logger"
          pkg="jsk_robot_startup" type="mongo_record.py"
          machine="$(arg machine)"
          respawn="$(arg respawn)">
      <rosparam subst_value="true">
        subst_param: true
        topics:
        - /${param robot/name}/app_list
      </rosparam>
    </node>

  </group> <!-- lifelog ns -->
</launch>
